#
# Convert SVG to series of c arrays
# Requires svg.path (https://github.com/regebro/svg.path)
#

import sys
from svg.path import parse_path
from PIL import Image, ImageDraw

path_str = 'm 55.751662,940.62189 7.98453,-7.98445 -9.33583,-8.58425 c -7.14502,-6.56982 -9.61724,-10.31832 -10.53498,-15.97373 -1.5915,-9.80712 -9.62803,-17.75205 -19.32822,-19.10786 l -7.452162,-1.04162 7.181632,6.88201 7.18162,6.88203 -6.97564,7.8933 c -3.83659,4.34132 -7.653767,8.64853 -8.482606,9.57156 -0.843457,0.9393 -4.112725,-0.51427 -7.4248321,-3.30121 -3.254798,-2.73871 -6.583865,-4.97948 -7.397914,-4.97948 -3.207675,0 0.664682,9.92337 5.925107,15.18376 4.3648641,4.36482 7.2664671,5.5751 13.4389751,5.60553 6.61364,0.0326 9.38017,1.37815 17.30433,8.41636 5.18766,4.60766 9.54447,8.41018 9.68179,8.45004 0.13733,0.0398 3.84272,-3.52053 8.2342,-7.91199 z m 84.571458,0.60521 c 8.68981,-7.52635 12.01003,-9.26147 17.68754,-9.2434 9.06844,0.0289 17.58638,-6.08814 20.41579,-14.66122 1.21563,-3.68338 1.86614,-7.04117 1.44557,-7.46174 -0.42056,-0.42056 -3.91128,1.829 -7.75711,4.99905 l -6.99247,5.76372 -8.31867,-9.11707 -8.3187,-9.11709 6.92729,-7.31979 6.92729,-7.31981 -7.45217,1.13173 c -9.71812,1.47585 -17.74759,9.45785 -19.3313,19.21701 -0.94002,5.79263 -3.40454,9.42127 -11.29943,16.63671 l -10.09718,9.22818 7.11221,8.08701 c 3.91173,4.44785 7.39148,8.16696 7.7328,8.26469 0.34129,0.0977 5.43463,-3.99187 11.31854,-9.08798 z m -29.29479,48.22178 c -0.8297,-1.39967 -3.97692,-3.73411 -6.99382,-5.18761 -8.245638,-3.97269 -10.190388,-8.20348 -5.933198,-12.90759 5.167608,-5.7101 14.842138,-5.17809 19.770458,1.08718 4.67212,5.93959 4.91264,9.73597 0.97317,15.36033 -3.36442,4.80332 -5.65924,5.28706 -7.81661,1.64769 z m -52.335038,-1.64769 c -3.93947,-5.62436 -3.69896,-9.42074 0.97317,-15.36033 4.9283,-6.26527 14.60284,-6.79728 19.77046,-1.08718 4.25719,4.70411 2.31243,8.9349 -5.9332,12.90759 -3.0169,1.4535 -6.16412,3.78794 -6.99382,5.18761 -2.15737,3.63937 -4.45219,3.15563 -7.81661,-1.64769 z m 25.35976,16.57701 c 0,-5.15963 3.80681,-12.68753 6.03964,-11.94326 2.63801,0.87933 5.6115,10.69936 4.01964,13.27506 -0.61904,1.0016 -1.88212,0.6604 -2.893,-0.7816 -1.39495,-1.9899 -2.00715,-2.0347 -2.75103,-0.2014 -1.30908,3.2262 -4.41525,2.9808 -4.41525,-0.3488 z m -3.77284,13.6656 c 0,-3.2768 3.46596,-4.1844 3.16587,-0.2063 -0.18695,2.4785 -0.22481,8.736 7.20946,8.9678 7.43426,0.2317 6.73421,-5.2595 6.75962,-7.8432 0.0487,-4.9499 3.390788,-3.8517 3.390788,0.1535 0,4.0541 3.0179,7.4725 8.21696,7.4934 5.19906,0.021 5.21293,-4.4126 5.21293,-8.532 0,-3.4519 1.98938,-8.0905 5.00193,-11.6629 7.33362,-8.69662 10.08946,-16.68207 10.08946,-29.23567 0,-32.71613 -30.745028,-53.06039 -59.170118,-39.15341 -26.28779,12.8613 -31.54354,50.57191 -9.86794,70.80358 2.69481,2.5153 4.89964,6.3777 4.89964,8.5831 0.14205,7.3262 1.65649,9.1693 7.60857,9.261 5.95209,0.092 6.09259,-5.0195 7.48283,-8.629 z m 74.772468,28.1842 -6.97236,-6.1309 7.74803,-8.9604 c 4.26144,-4.9282 8.69668,-8.9604 9.8561,-8.9604 1.15941,0 4.48007,2.2725 7.37924,5.0501 6.33117,6.0656 8.58275,4.736 5.31979,-3.1414 -3.77438,-9.1121 -12.23114,-15.1136 -21.29669,-15.1136 -6.43399,0 -9.0817,-1.2336 -15.18247,-7.074 -4.42542,-4.23652 -7.71989,-6.17726 -8.21328,-4.83833 -0.4531,1.22964 -3.25037,5.58543 -6.21613,9.67953 l -5.3923,7.4438 6.45194,6.2534 c 3.54857,3.4394 6.45195,7.658 6.45195,9.3747 0,11.7346 10.31121,22.5269 21.53657,22.5413 l 5.50196,0.01 -6.97235,-6.1309 z m -121.871338,3.2693 c 6.06262,-3.1351 11.25681,-11.5225 11.25681,-18.1771 0,-2.3366 2.66444,-6.9973 5.921,-10.3572 l 5.92101,-6.1088 -4.5062,-5.5183 c -2.4784,-3.0351 -5.47687,-7.1176 -6.6633,-9.0722 -2.04169,-3.36379 -2.49589,-3.238 -8.48891,2.3509 -4.73925,4.4197 -8.64133,6.147 -15.51433,6.8674 -10.524171,1.1031 -17.1895861,6.469 -19.9375771,16.0506 -2.09236503,7.2956 -0.42186103,7.7056 5.539823,1.3597 2.43677,-2.5938 5.4837221,-4.716 6.7709981,-4.716 1.287258,0 5.88868,4.0309 10.225366,8.9576 l 7.88487,8.9576 -7.09565,6.1337 -7.095634,6.1336 5.124034,0 c 2.81823,0 7.61419,-1.2877 10.65769,-2.8615 z'
path = parse_path(path_str)

points = []

TOTAL_POINTS = 1000
MAX_LEN = 10
MAX_DEV = 4096

min_x = 1e99
min_y = 1e99
max_x = 0
max_y = 0

for x in range(1,(TOTAL_POINTS + 1)):
	point = path.point(x/float(TOTAL_POINTS))
	points.append([point.real, point.imag])
	if(point.real > max_x):
		max_x = point.real

	if(point.imag > max_y):
		max_y = point.imag

	if(point.real < min_x):
		min_x = point.real

	if(point.imag < min_y):
		min_y = point.imag

for x in range(len(points)):
	points[x][0] = (points[x][0] - min_x)
	points[x][1] = (points[x][1] - min_y)

im = Image.new('RGB', (1024,1024))
draw = ImageDraw.Draw(im)

path_id = 0
cStr = "path_t path" + str(path_id) + "[] = {"

for x in range(1,len(points)):
	dist = ((points[x][0] - points[x-1][0])**2 + (points[x][1] -points[x-1][1])**2)**0.5
	if(dist < MAX_LEN):
		cStr += '{' + str(int(points[x-1][0]/int(max_x - min_x)*MAX_DEV)) + ', ' + str(int(points[x-1][1]/int(max_y - min_y)*MAX_DEV)) + '}, '
		draw.line([(points[x-1][0]/int(max_x - min_x)*1024, points[x-1][1]/int(max_y - min_y)*1024), (points[x][0]/int(max_x - min_x)*1024, points[x][1]/int(max_y - min_y)*1024)], fill = 128)
	else:
		path_id += 1
		cStr += '};\n'
		cStr += "path_t path" + str(path_id) + "[] = {"
cStr += '};\n'

print cStr

del draw
im.show()
